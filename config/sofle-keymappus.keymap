#define ZMK_POINTING_DEFAULT_MOVE_VAL 600  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 35    // 10

#include <input/processors.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>
#include <zephyr/dt-bindings/input/input-event-codes.h>

#define ------- &trans

// Layer definitions
#define BASE 0
#define PC   1
#define SYM  2
#define NUM  3
#define NAV  4
#define QWER 5
#define ADJ  6

// Home row mods
#define HRM_R &hml LSHFT R
#define HRM_S &hml LCTRL S
#define HRM_N &hml LALT N
#define HRM_T &hml LGUI T
#define HRM_A &hmr RGUI A
#define HRM_E &hmr RALT E
#define HRM_I &hmr RCTRL I
#define HRM_H &hmr RSHFT H
// Home row mods for PC
#define PHRM_T &hml LCTRL T
#define PHRM_S &hml LGUI S
#define PHRM_I &hmr GUI I
#define PHRM_A &hmr RCTRL A

/ {
    // Pointing device configuration
    zip_scroll_scaler: zip_scroll_scaler {
        compatible = "zmk,input-processor-scaler";
        #input-processor-cells = <2>;
        type = <INPUT_EV_REL>;
        codes = <INPUT_REL_WHEEL INPUT_REL_HWHEEL>;
        track-remainders;
    };
};

&mmv_input_listener {
    input-processors = <&zip_xy_scaler 2 1>;
};

&msc_input_listener {
    input-processors = <&zip_scroll_scaler 2 1>;
};

&msc {
    acceleration-exponent = <0>;      // Linear scrolling
    time-to-max-speed-ms = <0>;       // Instant max speed
    delay-ms = <0>;                   // No delay
};

&mmv {
    time-to-max-speed-ms = <300>;     // Mouse acceleration
    acceleration-exponent = <2>;
    delay-ms = <0>;
};

mouse_slow: mouse_slow {
    compatible = "zmk,behavior-input-processor-scaler";
    scale-multiplier = <1>;
    scale-divisor = <3>;  // 3x slower for precision
};

/ {
    /* 
     * Key position reference for Sofle standard:
     * ╭──────────────────────╮ ╭──────────────────────╮
     * │  0  1  2  3  4  5    │ │     6  7  8  9 10 11 │
     * │ 12 13 14 15 16 17    │ │    18 19 20 21 22 23 │
     * │ 24 25 26 27 28 29    │ │    30 31 32 33 34 35 │
     * │ 36 37 38 39 40 41    │ │    42 43 44 45 46 47 │
     * ╰─────╮ 48 49 50 51 52 │ │ 53 54 55 56 57 ╭─────╯
     *       ╰────────────────╯ ╰────────────────╯
     *
     * Key position reference for Sofle with Joystick:
     * ╭──────────────────────╮ ╭─-╮╭──────────────────────╮
     * │  0  1  2  3  4  5    │ │ 6││     7  8  9 10 11 12 │
     * │ 13 14 15 16 17 18    │ │19││    20 21 22 23 24 25 │
     * │ 26 27 28 29 30 31    │ │32││    33 34 35 36 37 38 │
     * │ 39 40 41 42 43 44    │ │45││    46 47 48 49 50 51 │
     * ╰──────╮52 53 54 55 56 │ │57││ 58 59 60 61 62 ╭─────╯
     *        ╰───────────────╯ ╰─-╯╰────────────────╯
     * ╭──────────────────────╮        ╭─-╮   ╭──────────────────────╮
     * │  0  1  2  3  4  5    │     ╭- | 6│___│     7  8  9 10 11 12 │
     * │ 13 14 15 16 17 18    │     |32 57 45│|    20 21 22 23 24 25 │
     * │ 26 27 28 29 30 31    │        │19│   │    33 34 35 36 37 38 │
     * │ 39 40 41 42 43 44    │               │    46 47 48 49 50 51 │
     * ╰──────╮52 53 54 55 56 │               │ 59 60 61 62 63 ╭─────╯
     *        ╰───────────────╯               ╰────────────────╯
     *
     * Key position reference for Sofle with Scrollwheel(clickable) and Joystick(clickable):
     * ╭──────────────────────╮        ╭─-╮   ╭──────────────────────╮
     * │  0  1  2  3  4  5    │     ╭- | 6│___│     7  8  9 10 11 12 │
     * │ 13 14 15 16 17 18    │     |32 58 45│|    20 21 22 23 24 25 │
     * │ 26 27 28 29 30 31    │        │19│   │    33 34 35 36 37 38 │
     * │ 39 40 41 42 43 44    │  ╭─-╮         │    46 47 48 49 50 51 │
     * ╰──────╮53 54 55 56 57 │  │52│         │ 59 60 61 62 63 ╭─────╯
     *        ╰───────────────╯  ╰─-╯         ╰────────────────╯
     */
    
    behaviors {
        // Timeless home row mods - left hand
        hml: home_row_mod_left {
            compatible = "zmk,behavior-hold-tap";
            label = "HOME_ROW_MOD_LEFT";
            #binding-cells = <2>;
            bindings = <&kp>, <&kp>;
            flavor = "balanced";
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            // Left hand mods only activate with right hand keys + joystick
            hold-trigger-key-positions = <
                6 7 8 9 10 11 12      // Top row: joystick + right side
                19 20 21 22 23 24 25  // Home row: joystick + right side
                32 33 34 35 36 37 38  // Bottom row: joystick + right side
                45 46 47 48 49 50 51  // Number row: joystick + right side
                58 59 60 61 62 63     // Thumb row: joystick + right side
            >;
            hold-trigger-on-release;
        };
        
        // Timeless home row mods - right hand
        hmr: home_row_mod_right {
            compatible = "zmk,behavior-hold-tap";
            label = "HOME_ROW_MOD_RIGHT";
            #binding-cells = <2>;
            bindings = <&kp>, <&kp>;
            flavor = "balanced";
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            require-prior-idle-ms = <150>;
            // Right hand mods only activate with left hand keys
            hold-trigger-key-positions = <
                0 1 2 3 4 5           // Top row: left side
                13 14 15 16 17 18     // Home row: left side
                26 27 28 29 30 31     // Bottom row: left side
                39 40 41 42 43 44     // Number row: left side
                52                    // scrollwheel: left side
                53 54 55 56 57        // Thumb row: left side
            >;
            hold-trigger-on-release;
        };

        // Faster timing for index fingers (stronger)
        hml_index: hml_index {
           compatible = "zmk,behavior-hold-tap";
           tapping-term-ms = <200>;  // Faster for T
           // ... rest of config
        };

        // Standard timing for pinkies
        hml_pinky: hml_pinky {
           compatible = "zmk,behavior-hold-tap";
           tapping-term-ms = <300>;  // Slower for R
           // ... rest of config
        };
        
        // Layer tap for thumb keys
        lt: layer_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAP";
            #binding-cells = <2>;
            bindings = <&mo>, <&kp>;
            tapping-term-ms = <200>;
            quick-tap-ms = <150>;
            flavor = "tap-preferred";
        };
        
        // Sticky shift for capitalization
        skq: sticky_key_quick {
            compatible = "zmk,behavior-sticky-key";
            label = "STICKY_KEY_QUICK";
            #binding-cells = <1>;
            bindings = <&kp>;
            release-after-ms = <1000>;
            quick-release;
        };
        
        // Encoder behaviors
        rgb_encoder: rgb_encoder {
            compatible = "zmk,behavior-sensor-rotate";
            label = "RGB_ENCODER";
            #sensor-binding-cells = <0>;
            bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
        };

        scroll_encoder: scroll_encoder {
            compatible = "zmk,behavior-sensor-rotate";
            #sensor-binding-cells = <0>;
            bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;
            tap-ms = <30>;
        };
    };
    
    // German umlaut combos
    combos {
        compatible = "zmk,combos";
        
        combo_ae {
            timeout-ms = <50>;
            key-positions = <34 35>; // A + E in Neu
            bindings = <&de_ae>;
        };
        
        combo_oe {
            timeout-ms = <50>;
            key-positions = <48 35>; // O + E in Neu
            bindings = <&de_oe>;
        };
        
        combo_ue {
            timeout-ms = <50>;
            key-positions = <47 35>; // U + E in Neu
            bindings = <&de_ue>;
        };
        
        combo_ss {
            timeout-ms = <50>;
            key-positions = <27 28>; // S + N in Neu
            bindings = <&de_ss>;
        };
        
        // Quick QWERTY toggle for Chinese
        combo_qwerty {
            timeout-ms = <100>;
            key-positions = <57 59>; // Both inner thumb keys
            bindings = <&tog QWER>;
        };
        
        // Quick adjust layer access
        combo_adjust {
            timeout-ms = <100>;
            key-positions = <53 63>; // Both outer thumb keys
            bindings = <&mo ADJ>;
        };
    };

    &caps_word {
    continue-list = <UNDERSCORE MINUS BACKSPACE DELETE>;
};
    
    // Macros for German characters
    macros {

        uckm: umlaut_compose_key_mac {
            compatible = "zmk,behavior-macro";
            label = "UMLAUT_COMPOSE";
            #binding-cells = <0>;
            bindings = <&kp RALT>, <&kp U>;
        };

        de_ae: de_ae {
            compatible = "zmk,behavior-macro";
            label = "GERMAN_AE";
            #binding-cells = <0>;
            bindings = <&uckm>, <&kp A>;
        };
        
        de_oe: de_oe {
            compatible = "zmk,behavior-macro";
            label = "GERMAN_OE";
            #binding-cells = <0>;
            bindings = <&uckm>, <&kp O>;
        };
        
        de_ue: de_ue {
            compatible = "zmk,behavior-macro";
            label = "GERMAN_UE";
            #binding-cells = <0>;
            bindings = <&uckm>, <&kp U>;
        };
        
        de_ss: de_ss {
            compatible = "zmk,behavior-macro";
            label = "GERMAN_SS";
            #binding-cells = <0>;
            bindings = <&kp RALT>, <&kp S>;
        };

        // Macros for each umlaut on pc using alt and numbers
        pa_ae: pc_alt_ae {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_press>, <&kp LALT>,
                       <&macro_tap>, <&kp KP_N0 &kp KP_N2 &kp KP_N2 &kp KP_N8>;
                       <&macro_release>, <&kp LALT>;
        };
        
        pa_oe: pc_alt_oe {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_press>, <&kp LALT>,
                       <&macro_tap>, <&kp LALT>, <&kp KP_N0 &kp KP_N2 &kp KP_N4 &kp KP_N6>;
                       <&macro_release>, <&kp LALT>;
        };
        
        pa_ue: pc_alt_ue {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_press>, <&kp LALT>,
                       <&macro_tap>, <&kp LALT>, <&kp KP_N0 &kp KP_N2 &kp KP_N5 &kp KP_N2>;
                       <&macro_release>, <&kp LALT>;
        };
        
        pa_ss: pc_alt_ss {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_press>, <&kp LALT>,
                       <&macro_tap>, <&kp LALT>, <&kp KP_N0 &kp KP_N2 &kp KP_N2 &kp KP_N3>;
                       <&macro_release>, <&kp LALT>;
        };
    };
    };
    
    keymap {
        compatible = "zmk,keymap";
        /*
         * Base layer - Hands Down Neu layout with home row mods:
         * ╭────────────────────────────╮      Mouse──────────────────────────╮
         * │ ESC  1   2   3   4   5     │       __│     6   7   8   9   0  BSP│
         * │ TAB  W   F   M   P   V  ╭──│    __│ ↑│__  /?  .>   Q   "  '"  DEL│
         * │ CTR  R   S   N   T   B  │MU│   │ ← ENT →|  Y   A   E   I   H  ;: │
         * │ SHF  X   C   L   D   G  ╰──│    ¯¯│ ↓│¯¯  -_   U   O   K   J  SHF│
         * ╰───────┐CTR  GUI ESC SPC SPC│       ¯¯│ENT BSP ALT ALT COMP╭──────╯
         *         └────────────────────╯         └────────────────────╯
         */
        base_layer {
            bindings = <
               &kp  ESC     &kp N1   &kp N2      &kp N3     &kp N4        &kp N5                        &kp UP                        &kp N6         &kp N7      &kp N8     &kp N9       &kp N0    &kp BSPC
               &kp  TAB     &kp W    &kp F       &kp M      &kp P         &kp V                         &kp DOWN                      &kp FSLH       &kp DOT     &kp Q      &kp DQT      &kp SQT   &kp Z
               &kp  LCTRL   HRM_R    HRM_S       HRM_N      HRM_T         &kp B                         &kp LEFT                      &kp COMMA      HRM_A       HRM_E      HRM_I        HRM_H     &kp J
               &skq LSHFT   &kp X    &kp C       &kp L      &kp D         &kp G                         &kp RIGHT                     &kp MINUS      &kp U       &kp O      &kp Y        &kp K     &kp RSHFT
&kp C_MUTE                           &kp LCTRL   &kp LGUI   &lt NAV ESC   &lt SYM SPACE   &kp SPACE     &kp ENTER     &lt NUM ENTER   &lt SYM BSPC   &kp RSHFT   &kp RALT   &uckm
            >;
            label = "HD-NEU";
            ssensor-bindings = <&scroll_encoder>;
        };

        // PC layer - Hands Down Neu layout with home row mods
        pc_layer {
            bindings = <
           -------   -------   -------    -------     -------   -------              -------               -------   -------   -------     -------    -------   -------
           -------   -------   -------    -------     -------   -------              -------               -------   -------   -------     -------    -------   -------
           -------   -------   PHRM_S     -------     PHRM_T    -------              -------               -------   PHRM_A    -------     PHRM_I     -------   -------
           -------   -------   -------    -------     -------   -------              -------               -------   -------   -------     -------    -------   -------
-------                        &kp LGUI   &kp LCTRL   -------   -------   -------    -------     -------   -------   -------   &kp RALT   &kp RCTRL
            >;
            label = "HD-PC";
            sensor-bindings = <&scroll_encoder>;
        };
        /*
         * Symbol layer - optimized for programming:
         * ╭────────────────────────────╮      Mouse──────────────────────────╮
         * │  o   o   o   o   o   o     │       __│     o   o   o   o   o   o │
         * │ `~   @  [{  ]}   |   %  ╭──│    __│ ↑│__   &   *   (   )   +  =+ │
         * │  o   !   {   }   _  #~  │ o│   │ ← LC  →|  $  -_  ;:   :   "  '" │
         * │  o   ^   <   >   ~  \|  ╰──│    ¯¯│ ↓│¯¯   ?  /?  ,<  .>   |   o │
         * ╰───────┐  o   o   o   o   o │       ¯¯│ o   o   o   o   o  ╭──────╯
         *         └────────────────────╯         └────────────────────╯
         */
        symbol_layer {
            bindings = <
           -------     -------     -------    -------    -------     -------                &mmv MOVE_UP                -------     -------     -------     -------     -------    -------
           &kp GRAVE   &kp AT      &kp LBKT   &kp RBKT   &kp PIPE    &kp PRCNT              &mmv MOVE_DOWN              &kp AMPS    &kp STAR    &kp LPAR    &kp RPAR    &kp PLUS   &kp EQUAL
           -------     &kp EXCL    &kp LBRC   &kp RBRC   &kp UNDER   &kp HASH               &mmv MOVE_LEFT              &kp DLLR    &kp MINUS   &kp SEMI    &kp COLON   &kp DQT    &kp APOS
           -------     &kp CARET   &kp LT     &kp GT     &kp TILDE   &kp BSLH               &mmv MOVE_RIGHT             &kp QMARK   &kp FSLH    &kp COMMA   &kp DOT     &kp PIPE   -------
-------                            -------    -------    -------     -------      -------   &mkp LCLK         -------   -------     -------     -------     -------
            >;
            label = "SYMBOL";
            sensor-bindings = <&scroll_encoder>;
        };
        
        // Number/Function layer
        number_layer {
            bindings = <
           -------     &kp F1      &kp F2      &kp F3      &kp F4     &kp F5                -------               &kp F6      &kp F7     &kp F8     &kp F9     &kp F10    &kp F11
           &kp GRAVE   &kp N1      &kp N2      &kp N3      &kp N4     &kp N5                -------               &kp N6      &kp N7     &kp N8     &kp N9     &kp N0     &kp F12
           -------     &mkp LCLK   &mkp MCLK   &mkp RCLK   &mkp MB4   &mkp MB5              -------               &kp CARET   &kp AMPS   &kp STAR   &kp LPAR   &kp RPAR   &kp MINUS
           -------     -------     -------     -------     -------    -------               -------               -------     -------    -------    -------    -------    -------
-------                            -------     -------     -------    -------     -------   -------     -------   -------     -------    -------    -------
            >;
            label = "NUMBER";
            <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };
        
        // Navigation layer with mouse support
        navigation_layer {
            bindings = <
           -------   -------     -------     -------     -------      -------                 -------               -------     -------    -------    -------      -------   -------
           -------   -------     -------     -------     -------      -------                 -------               &kp PG_UP   &kp HOME   &kp UP     &kp END      -------   -------
           -------   &kp LSHFT   &kp LCTRL   &kp LALT    &kp LGUI     -------                 -------               &kp PG_DN   &kp LEFT   &kp DOWN   &kp RIGHT    -------   -------
           -------   &mkp MB4    &mkp MB5    &mkp LCLK   &mkp MCLK    &mkp RCLK               -------               -------     &kp BSPC   &kp DEL    &kp INSERT   -------   -------
-------                          -------     -------     -------      -------     -------     -------     -------   -------     -------    -------    -------
            >;
            label = "NAV";
            sensor-bindings = <&scroll_encoder>;
        };
        
        // QWERTY layer for Chinese pinyin input
        qwerty_layer {
            bindings = <
               &kp ESC     &kp N1   &kp N2      &kp N3     &kp N4    &kp N5                    &kp UP                    &kp N6     &kp N7      &kp N8      &kp N9       &kp N0     &kp BSPC
               &kp TAB     &kp Q    &kp W       &kp E      &kp R     &kp T                     &kp DOWN                  &kp Y      &kp U       &kp I       &kp O        &kp P      &kp DEL
               &kp LCTRL   &kp A    &kp S       &kp D      &kp F     &kp G                     &kp LEFT                  &kp H      &kp J       &kp K       &kp L        &kp SEMI   &kp SQT
               &kp LSHFT   &kp Z    &kp X       &kp C      &kp V     &kp B                     &kp RIGHT                 &kp N      &kp M       &kp COMMA   &kp DOT      &kp FSLH   &kp RSHFT
&kp C_MUTE                          &kp LCTRL   &kp LGUI   &kp ESC   &kp SPACE   &kp SPACE     &kp ENTER     &kp ENTER   &kp BSPC   &tog QWER   &kp RALT    &kp DELETE
            >;
            label = "QWERTY";
            sensor-bindings = <&scroll_encoder>;
        };
        
        // Adjust layer for keyboard settings
        adjust_layer {
            bindings = <
           &sys_reset        &bootloader      -------           -------           -------           &soft_off                     -------               &to BASE          &to PC            -------           &bootloader       &sys_reset        -------
           &bt BT_CLR        &bt BT_SEL 0     &bt BT_SEL 1      &bt BT_SEL 2      &bt BT_SEL 3      &bt BT_SEL 4                  -------               -------           -------           -------           -------           -------           &bt BT_CLR_ALL
           -------           &out OUT_USB     &out OUT_BLE      &out OUT_TOG      -------           -------                       -------               -------           -------           -------           -------           -------           -------
           &rgb_ug RGB_OFF   &rgb_ug RGB_ON   &rgb_ug RGB_EFF   &rgb_ug RGB_EFR   &rgb_ug RGB_BRI   &rgb_ug RGB_BRD               -------               &rgb_ug RGB_SPI   &rgb_ug RGB_SPD   &rgb_ug RGB_HUI   &rgb_ug RGB_HUD   &rgb_ug RGB_SAI   &rgb_ug RGB_SAD
-------                                       -------           -------           -------           -------           -------     -------     -------   -------           -------           -------           -------
            >;
            label = "ADJUST";
            sensor-bindings = <&rgb_encoder>;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";
        mac_mods {
            if-layers = <BT_SEL 0>;  // Profile 0 for Mac
            then-layer = <BASE>;
        };
        pc_mods {
            if-layers = <BT_SEL 1>;  // Profile 1 for PC
            then-layer = <PC>;
        };
    };
};
